#TU NIE LOCALHOST!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
spring.datasource.url=jdbc:postgresql://192.168.0.18:5432/picposter
spring.datasource.username=maja
spring.datasource.password=picposter
#tu zmiana z update na validate
spring.jpa.hibernate.ddl-auto=none
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQL9Dialect
server.port=8090

#spring.jpa.properties.javax.persistence.schema-generation.scripts.action=create
#spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=C:\\Users\\User\\Desktop\\3rok\\6sem\\ZTW\\L\\pic_poster\\picposter\\src\\main\\resources\\create.sql
#spring.jpa.properties.javax.persistence.schema-generation.scripts.create-source=metadata

## MULTIPART (MultipartProperties)
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=200MB
# Max Request Size
spring.servlet.multipart.max-request-size=215MB

spring.flyway.locations=classpath:db/migration
spring.flyway.schemas=public
spring.datasource.hikari.schema=public
spring.flyway.baseline-on-migrate=true

## File Storage Properties
# All files uploaded through the REST API will be stored in this directory
#$file.upload-dir=.\\src\\main\\java\\com\\picposter\\images\\
#$file.upload-dir=/images
$file.upload-dir=C:\\Users\\User\\Desktop\\3rok\\6sem\\ZTW\\L\\pic_poster\\picposter\\src\\main\\java\\com\\picposter\\images\\